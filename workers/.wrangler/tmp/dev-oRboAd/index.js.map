{
  "version": 3,
  "sources": ["../../../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../node_modules/unenv/dist/runtime/node/console.mjs", "../../../node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../../calendar-do.js", "../../../index.js", "../../../../workflows/prompts.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-ul5Npd/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-ul5Npd/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/shammah/work/cf_ai_autocal/workers/.wrangler/tmp/dev-oRboAd",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nconst workerdProcess = getBuiltinModule(\"node:process\");\nconst isWorkerdProcessV2 = globalThis.Cloudflare.compatibilityFlags.enable_nodejs_process_v2;\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  // `hrtime` is only available from workerd process v2\n  hrtime: isWorkerdProcessV2 ? workerdProcess.hrtime : UnenvHrTime,\n  // `nextTick` is available from workerd process v1\n  nextTick: workerdProcess.nextTick\n});\nexport const { exit, features, platform } = workerdProcess;\nexport const {\n  // Always implemented by workerd\n  env,\n  // Only implemented in workerd v2\n  hrtime,\n  // Always implemented by workerd\n  nextTick\n} = unenvProcess;\nexport const {\n  _channel,\n  _disconnect,\n  _events,\n  _eventsCount,\n  _handleQueue,\n  _maxListeners,\n  _pendingMessage,\n  _send,\n  assert,\n  disconnect,\n  mainModule\n} = unenvProcess;\nexport const {\n  // @ts-expect-error `_debugEnd` is missing typings\n  _debugEnd,\n  // @ts-expect-error `_debugProcess` is missing typings\n  _debugProcess,\n  // @ts-expect-error `_exiting` is missing typings\n  _exiting,\n  // @ts-expect-error `_fatalException` is missing typings\n  _fatalException,\n  // @ts-expect-error `_getActiveHandles` is missing typings\n  _getActiveHandles,\n  // @ts-expect-error `_getActiveRequests` is missing typings\n  _getActiveRequests,\n  // @ts-expect-error `_kill` is missing typings\n  _kill,\n  // @ts-expect-error `_linkedBinding` is missing typings\n  _linkedBinding,\n  // @ts-expect-error `_preload_modules` is missing typings\n  _preload_modules,\n  // @ts-expect-error `_rawDebug` is missing typings\n  _rawDebug,\n  // @ts-expect-error `_startProfilerIdleNotifier` is missing typings\n  _startProfilerIdleNotifier,\n  // @ts-expect-error `_stopProfilerIdleNotifier` is missing typings\n  _stopProfilerIdleNotifier,\n  // @ts-expect-error `_tickCallback` is missing typings\n  _tickCallback,\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  arch,\n  argv,\n  argv0,\n  availableMemory,\n  // @ts-expect-error `binding` is missing typings\n  binding,\n  channel,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  // @ts-expect-error `domain` is missing typings\n  domain,\n  emit,\n  emitWarning,\n  eventNames,\n  execArgv,\n  execPath,\n  exitCode,\n  finalization,\n  getActiveResourcesInfo,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getMaxListeners,\n  getuid,\n  hasUncaughtExceptionCaptureCallback,\n  // @ts-expect-error `initgroups` is missing typings\n  initgroups,\n  kill,\n  listenerCount,\n  listeners,\n  loadEnvFile,\n  memoryUsage,\n  // @ts-expect-error `moduleLoadList` is missing typings\n  moduleLoadList,\n  off,\n  on,\n  once,\n  // @ts-expect-error `openStdin` is missing typings\n  openStdin,\n  permission,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  // @ts-expect-error `reallyExit` is missing typings\n  reallyExit,\n  ref,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  send,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  setuid,\n  setUncaughtExceptionCaptureCallback,\n  sourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  throwDeprecation,\n  title,\n  traceDeprecation,\n  umask,\n  unref,\n  uptime,\n  version,\n  versions\n} = isWorkerdProcessV2 ? workerdProcess : unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "/**\n * Calendar Durable Object - Phase 3\n * Handles persistent event storage and conflict detection\n */\n\nexport class CalendarDO {\n  constructor(state, env) {\n    this.state = state;\n    this.storage = state.storage;\n    this.env = env;\n  }\n\n  async fetch(request) {\n    const url = new URL(request.url);\n    const corsHeaders = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    };\n\n    // Handle CORS preflight\n    if (request.method === 'OPTIONS') {\n      return new Response(null, {\n        status: 204,\n        headers: corsHeaders,\n      });\n    }\n\n    try {\n      // Route handling for DO endpoints\n      if (url.pathname === '/add' && request.method === 'POST') {\n        return await this.handleAddEvent(request, corsHeaders);\n      }\n      \n      if (url.pathname === '/list' && request.method === 'GET') {\n        return await this.handleListEvents(corsHeaders);\n      }\n      \n      if (url.pathname.startsWith('/delete/') && request.method === 'DELETE') {\n        const eventId = url.pathname.split('/')[2];\n        return await this.handleDeleteEvent(eventId, corsHeaders);\n      }\n      \n      if (url.pathname.startsWith('/update/') && request.method === 'PUT') {\n        const eventId = url.pathname.split('/')[2];\n        return await this.handleUpdateEvent(eventId, request, corsHeaders);\n      }\n\n      if (url.pathname === '/conflicts' && request.method === 'POST') {\n        return await this.handleCheckConflicts(request, corsHeaders);\n      }\n\n      return new Response(\n        JSON.stringify({\n          error: 'Unknown DO endpoint',\n          availableEndpoints: ['/add', '/list', '/delete/:id', '/update/:id', '/conflicts']\n        }),\n        {\n          status: 404,\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\n        }\n      );\n\n    } catch (error) {\n      console.error('DO Error:', error);\n      return new Response(\n        JSON.stringify({\n          error: 'Internal DO error',\n          message: error.message\n        }),\n        {\n          status: 500,\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\n        }\n      );\n    }\n  }\n\n  async handleAddEvent(request, corsHeaders) {\n    try {\n      const eventData = await request.json();\n      const validationResult = this.validateEvent(eventData);\n      \n      if (!validationResult.valid) {\n        return new Response(\n          JSON.stringify({\n            success: false,\n            error: validationResult.error\n          }),\n          {\n            status: 400,\n            headers: { 'Content-Type': 'application/json', ...corsHeaders }\n          }\n        );\n      }\n\n      // Create event with metadata\n      const event = {\n        id: this.generateEventId(),\n        title: eventData.title,\n        datetime: eventData.datetime,\n        priority: eventData.priority || 'medium',\n        participants: eventData.participants || [],\n        duration: eventData.duration || 60,\n        location: eventData.location || null,\n        description: eventData.description || null,\n        created: new Date().toISOString(),\n        updated: new Date().toISOString()\n      };\n\n      // Check for conflicts before adding\n      const conflicts = await this.checkConflicts(event);\n      \n      if (conflicts.length > 0 && !eventData.forceAdd) {\n        return new Response(\n          JSON.stringify({\n            success: false,\n            hasConflicts: true,\n            conflicts: conflicts,\n            event: event,\n            message: 'Event conflicts detected. Add forceAdd: true to override.'\n          }),\n          {\n            status: 409,\n            headers: { 'Content-Type': 'application/json', ...corsHeaders }\n          }\n        );\n      }\n\n      // Store the event\n      await this.storage.put(`event:${event.id}`, event);\n      \n      // Update event count\n      const count = await this.getEventCount();\n      await this.storage.put('eventCount', count + 1);\n\n      return new Response(\n        JSON.stringify({\n          success: true,\n          event: event,\n          conflicts: conflicts,\n          message: conflicts.length > 0 ? 'Event added despite conflicts' : 'Event added successfully'\n        }),\n        {\n          status: 201,\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\n        }\n      );\n\n    } catch (error) {\n      return new Response(\n        JSON.stringify({\n          success: false,\n          error: 'Failed to add event',\n          details: error.message\n        }),\n        {\n          status: 500,\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\n        }\n      );\n    }\n  }\n\n  async handleListEvents(corsHeaders) {\n    try {\n      const events = await this.getAllEvents();\n      const count = await this.getEventCount();\n      \n      return new Response(\n        JSON.stringify({\n          success: true,\n          events: events,\n          count: count,\n          totalEvents: events.length\n        }),\n        {\n          status: 200,\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\n        }\n      );\n    } catch (error) {\n      return new Response(\n        JSON.stringify({\n          success: false,\n          error: 'Failed to retrieve events',\n          details: error.message\n        }),\n        {\n          status: 500,\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\n        }\n      );\n    }\n  }\n\n  async handleDeleteEvent(eventId, corsHeaders) {\n    try {\n      const event = await this.storage.get(`event:${eventId}`);\n      \n      if (!event) {\n        return new Response(\n          JSON.stringify({\n            success: false,\n            error: 'Event not found'\n          }),\n          {\n            status: 404,\n            headers: { 'Content-Type': 'application/json', ...corsHeaders }\n          }\n        );\n      }\n\n      await this.storage.delete(`event:${eventId}`);\n      \n      // Update event count\n      const count = await this.getEventCount();\n      await this.storage.put('eventCount', Math.max(0, count - 1));\n\n      return new Response(\n        JSON.stringify({\n          success: true,\n          deletedEvent: event,\n          message: 'Event deleted successfully'\n        }),\n        {\n          status: 200,\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\n        }\n      );\n    } catch (error) {\n      return new Response(\n        JSON.stringify({\n          success: false,\n          error: 'Failed to delete event',\n          details: error.message\n        }),\n        {\n          status: 500,\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\n        }\n      );\n    }\n  }\n\n  async handleUpdateEvent(eventId, request, corsHeaders) {\n    try {\n      const updates = await request.json();\n      const existingEvent = await this.storage.get(`event:${eventId}`);\n      \n      if (!existingEvent) {\n        return new Response(\n          JSON.stringify({\n            success: false,\n            error: 'Event not found'\n          }),\n          {\n            status: 404,\n            headers: { 'Content-Type': 'application/json', ...corsHeaders }\n          }\n        );\n      }\n\n      // Merge updates with existing event\n      const updatedEvent = {\n        ...existingEvent,\n        ...updates,\n        id: eventId, // Preserve ID\n        created: existingEvent.created, // Preserve creation time\n        updated: new Date().toISOString()\n      };\n\n      // Validate updated event\n      const validationResult = this.validateEvent(updatedEvent);\n      if (!validationResult.valid) {\n        return new Response(\n          JSON.stringify({\n            success: false,\n            error: validationResult.error\n          }),\n          {\n            status: 400,\n            headers: { 'Content-Type': 'application/json', ...corsHeaders }\n          }\n        );\n      }\n\n      await this.storage.put(`event:${eventId}`, updatedEvent);\n\n      return new Response(\n        JSON.stringify({\n          success: true,\n          event: updatedEvent,\n          message: 'Event updated successfully'\n        }),\n        {\n          status: 200,\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\n        }\n      );\n    } catch (error) {\n      return new Response(\n        JSON.stringify({\n          success: false,\n          error: 'Failed to update event',\n          details: error.message\n        }),\n        {\n          status: 500,\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\n        }\n      );\n    }\n  }\n\n  async handleCheckConflicts(request, corsHeaders) {\n    try {\n      const eventData = await request.json();\n      const conflicts = await this.checkConflicts(eventData);\n      \n      return new Response(\n        JSON.stringify({\n          success: true,\n          hasConflicts: conflicts.length > 0,\n          conflicts: conflicts\n        }),\n        {\n          status: 200,\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\n        }\n      );\n    } catch (error) {\n      return new Response(\n        JSON.stringify({\n          success: false,\n          error: 'Failed to check conflicts',\n          details: error.message\n        }),\n        {\n          status: 500,\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\n        }\n      );\n    }\n  }\n\n  async getAllEvents() {\n    const events = [];\n    const list = await this.storage.list({ prefix: 'event:' });\n    \n    for (const [key, value] of list) {\n      events.push(value);\n    }\n    \n    // Sort by datetime\n    return events.sort((a, b) => new Date(a.datetime) - new Date(b.datetime));\n  }\n\n  async checkConflicts(newEvent) {\n    const existingEvents = await this.getAllEvents();\n    const conflicts = [];\n    \n    const newStart = new Date(newEvent.datetime);\n    const newEnd = new Date(newStart.getTime() + (newEvent.duration || 60) * 60000);\n    \n    for (const event of existingEvents) {\n      // Skip self when updating\n      if (event.id === newEvent.id) continue;\n      \n      const eventStart = new Date(event.datetime);\n      const eventEnd = new Date(eventStart.getTime() + (event.duration || 60) * 60000);\n      \n      // Check for overlap\n      if (newStart < eventEnd && newEnd > eventStart) {\n        conflicts.push({\n          conflictingEvent: event,\n          overlapStart: new Date(Math.max(newStart, eventStart)).toISOString(),\n          overlapEnd: new Date(Math.min(newEnd, eventEnd)).toISOString(),\n          suggestion: this.generateConflictSuggestion(newEvent, event)\n        });\n      }\n    }\n    \n    return conflicts;\n  }\n\n  generateConflictSuggestion(newEvent, conflictingEvent) {\n    const suggestions = [];\n    const conflictEnd = new Date(new Date(conflictingEvent.datetime).getTime() + (conflictingEvent.duration || 60) * 60000);\n    \n    // Suggest time after conflicting event\n    const afterTime = new Date(conflictEnd.getTime() + 15 * 60000); // 15 min buffer\n    suggestions.push(`Consider scheduling at ${afterTime.toLocaleTimeString()} instead`);\n    \n    // Suggest day before/after if same day\n    const newDate = new Date(newEvent.datetime);\n    const conflictDate = new Date(conflictingEvent.datetime);\n    \n    if (newDate.toDateString() === conflictDate.toDateString()) {\n      const nextDay = new Date(newDate);\n      nextDay.setDate(nextDay.getDate() + 1);\n      suggestions.push(`Consider moving to ${nextDay.toLocaleDateString()}`);\n    }\n    \n    return suggestions;\n  }\n\n  validateEvent(event) {\n    if (!event.title || typeof event.title !== 'string') {\n      return { valid: false, error: 'Event title is required and must be a string' };\n    }\n    \n    if (!event.datetime) {\n      return { valid: false, error: 'Event datetime is required' };\n    }\n    \n    const date = new Date(event.datetime);\n    if (isNaN(date.getTime())) {\n      return { valid: false, error: 'Invalid datetime format' };\n    }\n    \n    if (event.title.length > 200) {\n      return { valid: false, error: 'Event title too long (max 200 characters)' };\n    }\n    \n    if (event.duration && (typeof event.duration !== 'number' || event.duration <= 0 || event.duration > 1440)) {\n      return { valid: false, error: 'Duration must be a positive number <= 1440 minutes' };\n    }\n    \n    return { valid: true };\n  }\n\n  async getEventCount() {\n    const count = await this.storage.get('eventCount');\n    return count || 0;\n  }\n\n  generateEventId() {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n  }\n} ", "/**\n * AutoCal Worker - Phase 5\n * Enhanced worker with Cloudflare Workflows for coordinated event processing pipeline\n */\n\nimport { CalendarDO } from './calendar-do.js';\nimport { WorkflowEntrypoint } from 'cloudflare:workers';\nimport { WORKFLOW_PROMPTS } from '../workflows/prompts.js';\n\n// Phase 5: Calendar Workflow Definition\nexport class CalendarWorkflow extends WorkflowEntrypoint {\n  async run(event, step) {\n    const { userInput, sessionId, currentDate = new Date().toISOString() } = event.payload;\n    \n    console.log(`[Workflow] Starting calendar workflow for session: ${sessionId}`);\n    \n    try {\n      // Step 1: Input Validation\n      const validationResult = await step.do(\"validate-input\", async () => {\n        return await this.validateInput(userInput);\n      });\n\n      if (!validationResult.valid) {\n        return {\n          success: false,\n          error: \"Invalid input\",\n          details: validationResult.errors,\n          step: \"validation\"\n        };\n      }\n\n      // Step 2: AI Parsing with retry logic\n      const parseResult = await step.do(\"ai-parsing\", {\n        retries: {\n          limit: 3,\n          delay: \"30 seconds\",\n          backoff: \"exponential\"\n        }\n      }, async () => {\n        return await this.parseWithAI(userInput, currentDate);\n      });\n\n      if (!parseResult.success) {\n        return {\n          success: false,\n          error: \"Failed to parse event details\",\n          details: parseResult.error,\n          step: \"ai-parsing\"\n        };\n      }\n\n      // Step 3: Event Storage\n      const storageResult = await step.do(\"event-storage\", {\n        retries: {\n          limit: 2,\n          delay: \"10 seconds\",\n          backoff: \"linear\"\n        }\n      }, async () => {\n        const finalEvent = parseResult.event;\n        return await this.storeEvent(finalEvent, sessionId);\n      });\n\n      if (!storageResult.success) {\n        return {\n          success: false,\n          error: \"Failed to store event\",\n          details: storageResult.error,\n          step: \"storage\"\n        };\n      }\n\n      // Step 4: Response Generation\n      const response = await step.do(\"response-generation\", async () => {\n        return await this.generateResponse({\n          event: storageResult.event,\n          userInput\n        });\n      });\n\n      console.log(`[Workflow] Successfully completed for session: ${sessionId}`);\n      \n      return {\n        success: true,\n        result: response,\n        metadata: {\n          eventId: storageResult.event.id,\n          processingTime: Date.now() - new Date(currentDate).getTime()\n        }\n      };\n\n    } catch (error) {\n      console.error(`[Workflow] Fatal error for session ${sessionId}:`, error);\n      \n      return {\n        success: false,\n        error: \"Workflow execution failed\",\n        details: error.message,\n        step: \"workflow-error\"\n      };\n    }\n  }\n\n  async validateInput(userInput) {\n    if (!userInput || typeof userInput !== 'string') {\n      return {\n        valid: false,\n        errors: ['Input must be a non-empty string']\n      };\n    }\n\n    const trimmed = userInput.trim();\n    if (trimmed.length < 3) {\n      return {\n        valid: false,\n        errors: ['Input too short - please provide more details']\n      };\n    }\n\n    return {\n      valid: true,\n      sanitized: trimmed\n    };\n  }\n\n  async parseWithAI(userInput, currentDate) {\n    try {\n      const prompt = WORKFLOW_PROMPTS.eventExtraction.buildPrompt(userInput, new Date(currentDate));\n      \n      const response = await this.env.AI.run(\n        WORKFLOW_PROMPTS.eventExtraction.model,\n        {\n          messages: [{ role: \"user\", content: prompt }],\n          max_tokens: WORKFLOW_PROMPTS.eventExtraction.maxTokens,\n          temperature: WORKFLOW_PROMPTS.eventExtraction.temperature\n        }\n      );\n\n      let parsed;\n      try {\n        parsed = JSON.parse(response.response);\n      } catch (parseError) {\n        throw new Error(`AI response not valid JSON: ${response.response}`);\n      }\n\n      if (!parsed.success || !parsed.event) {\n        return {\n          success: false,\n          error: \"AI could not extract event details\",\n          ambiguities: parsed.ambiguities || [],\n          suggestions: parsed.suggestions || []\n        };\n      }\n\n      const event = parsed.event;\n      if (!event.title || !event.datetime) {\n        return {\n          success: false,\n          error: \"Missing required event details (title or datetime)\",\n          ambiguities: parsed.ambiguities || []\n        };\n      }\n\n      event.id = crypto.randomUUID();\n      event.createdAt = new Date().toISOString();\n      event.source = 'workflow-parsed';\n      event.originalInput = userInput;\n\n      return {\n        success: true,\n        event,\n        confidence: parsed.confidence || 0.8\n      };\n\n    } catch (error) {\n      console.error('[Workflow] AI parsing error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  async storeEvent(event, sessionId) {\n    try {\n      const doId = this.env.CALENDAR_DO.idFromName(sessionId);\n      const doStub = this.env.CALENDAR_DO.get(doId);\n      \n      const response = await doStub.fetch(new Request('https://do/add', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ event })\n      }));\n\n      const result = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(result.error || 'Storage failed');\n      }\n\n      return {\n        success: true,\n        event: result.event\n      };\n\n    } catch (error) {\n      console.error('[Workflow] Storage error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  async generateResponse({ event, userInput }) {\n    return {\n      message: `\u2705 Workflow successfully processed \"${event.title}\" for ${new Date(event.datetime).toLocaleDateString()}`,\n      event,\n      type: 'success',\n      workflow_processed: true\n    };\n  }\n}\n\nexport { CalendarDO };\n\n// AI Prompt Templates for Phase 4\nconst PROMPTS = {\n  eventExtraction: {\n    model: \"@cf/meta/llama-3.3-70b-instruct-fp8-fast\",\n    maxTokens: 512,\n    temperature: 0.1,\n    \n    buildPrompt: (userInput, currentDate = new Date()) => {\n      return `You are an expert calendar assistant. Extract structured event information from natural language.\n\nCurrent date/time: ${currentDate.toISOString()}\nUser input: \"${userInput}\"\n\nExtract the following information and respond ONLY with valid JSON:\n{\n  \"success\": true/false,\n  \"confidence\": 0.0-1.0,\n  \"event\": {\n    \"title\": \"brief descriptive title\",\n    \"description\": \"optional longer description\",\n    \"datetime\": \"ISO 8601 datetime string\",\n    \"duration\": minutes as number,\n    \"participants\": [\"name1\", \"name2\"],\n    \"location\": \"location or null\",\n    \"priority\": \"low/medium/high\",\n    \"type\": \"meeting/appointment/meal/event/call\",\n    \"urgency\": \"low/normal/high\"\n  },\n  \"ambiguities\": [\"list of unclear aspects\"],\n  \"suggestions\": [\"alternative interpretations\"]\n}\n\nRules:\n- For relative times like \"tomorrow\", \"next Tuesday\", calculate actual dates\n- Default duration: meetings=30min, meals=60min, appointments=30min\n- If time is ambiguous, suggest business hours (9am-5pm)\n- Extract all mentioned people as participants\n- Determine urgency from words like \"urgent\", \"ASAP\", \"important\"\n- If information is missing or unclear, note in ambiguities\n\nExamples:\nInput: \"Book lunch with Sarah tomorrow at 1pm\"\nOutput: {\"success\":true,\"confidence\":0.95,\"event\":{\"title\":\"Lunch with Sarah\",\"datetime\":\"2024-09-26T13:00:00.000Z\",\"duration\":60,\"participants\":[\"Sarah\"],\"location\":null,\"priority\":\"medium\",\"type\":\"meal\",\"urgency\":\"normal\"},\"ambiguities\":[],\"suggestions\":[]}\n\nNow extract from: \"${userInput}\"`\n    }\n  },\n\n  conversationClassification: {\n    model: \"@cf/meta/llama-3.3-70b-instruct-fp8-fast\",\n    maxTokens: 256,\n    temperature: 0.1,\n\n    buildPrompt: (userInput) => {\n      return `Classify the user's intent for this calendar-related request.\n\nUser input: \"${userInput}\"\n\nRespond ONLY with valid JSON:\n{\n  \"intent\": \"create/query/modify/delete/conflict_check/general/help\",\n  \"confidence\": 0.0-1.0,\n  \"subtype\": \"specific action type\",\n  \"entities\": {\n    \"timeframe\": \"today/tomorrow/next week/specific date/null\",\n    \"people\": [\"mentioned names\"],\n    \"event_types\": [\"meeting/appointment/etc\"],\n    \"keywords\": [\"important words\"]\n  },\n  \"requires_clarification\": true/false,\n  \"suggested_response_type\": \"conversational/action/question\"\n}\n\nIntent categories:\n- create: wants to schedule/book/add/plan new event (MUST include action words like book/schedule/add)\n- query: asking about schedule/events (what/when/show/list/my schedule - ALWAYS query, never create)\n- modify: change/update/move/reschedule existing event\n- delete: cancel/remove/clear events\n- conflict_check: check for overlaps/conflicts/availability\n- general: help/capabilities/general calendar discussion\n- help: unclear intent or needs assistance\n\nKEY RULE: If input contains \"what\", \"show\", \"list\", \"my schedule\", \"tell me\" \u2192 ALWAYS \"query\", never \"create\"\n\nExamples:\n\"Book lunch tomorrow\" \u2192 {\"intent\":\"create\",\"confidence\":0.9}\n\"What's my schedule today?\" \u2192 {\"intent\":\"query\",\"confidence\":0.95}\n\"What my schedule next week\" \u2192 {\"intent\":\"query\",\"confidence\":0.95}\n\"Show me my calendar\" \u2192 {\"intent\":\"query\",\"confidence\":0.95}\n\"Do I have conflicts?\" \u2192 {\"intent\":\"conflict_check\",\"confidence\":0.9}\n\"Help me\" \u2192 {\"intent\":\"help\",\"confidence\":0.8}\n\nClassify: \"${userInput}\"`\n    }\n  },\n\n  naturalLanguageQuery: {\n    model: \"@cf/meta/llama-3.3-70b-instruct-fp8-fast\",\n    maxTokens: 512,\n    temperature: 0.2,\n\n    buildPrompt: (userQuery, events, currentDate) => {\n      return `You are a helpful calendar assistant. Answer the user's question about their schedule.\n\nCurrent date: ${currentDate.toISOString()}\nUser question: \"${userQuery}\"\nUser's events: ${JSON.stringify(events)}\n\nRespond ONLY with valid JSON:\n{\n  \"answer\": \"natural language response\",\n  \"relevant_events\": [\"array of event IDs that match the query\"],\n  \"summary\": {\n    \"count\": number,\n    \"timeframe\": \"description of time period\",\n    \"highlights\": [\"key points about the schedule\"]\n  },\n  \"suggestions\": [\"helpful follow-up actions\"],\n  \"confidence\": 0.0-1.0\n}\n\nQuery types to handle:\n- Schedule overview: \"What's my day like?\"\n- Specific searches: \"Meetings with John\"\n- Time availability: \"Am I free tomorrow afternoon?\"\n- Event details: \"When is my next appointment?\"\n- Pattern analysis: \"How busy am I this week?\"\n\nBe conversational, helpful, and specific. Include relevant details like times, participants, and locations.\n\nAnswer: \"${userQuery}\"`\n    }\n  },\n\n  contextualConversation: {\n    model: \"@cf/meta/llama-3.3-70b-instruct-fp8-fast\",\n    maxTokens: 384,\n    temperature: 0.4,\n\n    buildPrompt: (currentMessage, conversationHistory, userEvents) => {\n      return `You are AutoCal, a friendly AI calendar assistant. Continue this conversation naturally.\n\nCurrent message: \"${currentMessage}\"\nUser's events: ${JSON.stringify(userEvents)}\n\nRespond ONLY with valid JSON:\n{\n  \"response\": \"natural, helpful response\",\n  \"action_needed\": \"none/create_event/modify_event/query_schedule/clarify\",\n  \"follow_up_questions\": [\"questions to better help the user\"],\n  \"suggestions\": [\"helpful next steps\"],\n  \"tone\": \"friendly/professional/casual\"\n}\n\nGuidelines:\n- Be helpful and proactive in offering assistance\n- Ask clarifying questions when needed\n- Offer relevant suggestions based on their calendar\n- Use a warm, professional tone\n\nContinue the conversation for: \"${currentMessage}\"`\n    }\n  }\n};\n\n// Utility functions\nfunction validateAIResponse(response) {\n  try {\n    const parsed = JSON.parse(response);\n    return { valid: true, data: parsed };\n  } catch (error) {\n    return { valid: false, error: error.message };\n  }\n}\n\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url);\n    \n    // Enable CORS for all requests\n    const corsHeaders = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Session-ID',\n    };\n\n    // Handle CORS preflight requests\n    if (request.method === 'OPTIONS') {\n      return new Response(null, {\n        status: 204,\n        headers: corsHeaders,\n      });\n    }\n\n    try {\n      // Extract or generate session ID\n      const sessionId = getSessionId(request);\n      \n      // Basic API endpoint for Phase 1-3 compatibility\n      if (url.pathname === '/api' || url.pathname === '/api/') {\n        return new Response(\n          JSON.stringify({ \n            message: 'ok',\n            status: 'success',\n            phase: 4,\n            timestamp: new Date().toISOString(),\n            sessionId: sessionId,\n            ai_enabled: !!env.AI,\n            note: 'Phase 5: Workflow orchestration with coordinated AI processing pipeline'\n          }),\n          {\n            status: 200,\n            headers: {\n              'Content-Type': 'application/json',\n              ...corsHeaders,\n            },\n          }\n        );\n      }\n\n      // Health check endpoint\n      if (url.pathname === '/health') {\n        return new Response(\n          JSON.stringify({ \n            status: 'healthy',\n            version: '1.0.0',\n            phase: 5,\n            uptime: Date.now(),\n            ai_service: env.AI ? 'available' : 'unavailable',\n            workflow_service: env.WORKFLOW ? 'available' : 'unavailable',\n            features: ['cors', 'chat-api', 'durable-objects', 'event-storage', 'conflict-detection', 'workers-ai', 'llama-3.3', 'workflows', 'orchestration']\n          }),\n          {\n            status: 200,\n            headers: {\n              'Content-Type': 'application/json',\n              ...corsHeaders,\n            },\n          }\n        );\n      }\n\n      // Enhanced Chat endpoint with AI processing\n      if (url.pathname === '/api/chat') {\n        if (request.method === 'POST') {\n          try {\n            const body = await request.json();\n            const validationResult = validateChatRequest(body);\n            \n            if (!validationResult.valid) {\n              return new Response(\n                JSON.stringify({\n                  message: validationResult.error,\n                  status: 'error',\n                  code: 'VALIDATION_ERROR'\n                }),\n                {\n                  status: 400,\n                  headers: {\n                    'Content-Type': 'application/json',\n                    ...corsHeaders,\n                  },\n                }\n              );\n            }\n\n            // Process the command using Workflow orchestration (Phase 5)\n            const response = await processCommandWithWorkflow(body.command, body, sessionId, env);\n            \n            return new Response(\n              JSON.stringify({\n                ...response,\n                status: 'success',\n                phase: 5,\n                timestamp: new Date().toISOString(),\n                sessionId: sessionId,\n                requestId: generateRequestId()\n              }),\n              {\n                status: 200,\n                headers: {\n                  'Content-Type': 'application/json',\n                  ...corsHeaders,\n                },\n              }\n            );\n\n          } catch (error) {\n            console.error('Chat API error:', error);\n            \n            if (error instanceof SyntaxError) {\n              return new Response(\n                JSON.stringify({\n                  message: 'Invalid JSON in request body',\n                  status: 'error',\n                  code: 'INVALID_JSON'\n                }),\n                {\n                  status: 400,\n                  headers: {\n                    'Content-Type': 'application/json',\n                    ...corsHeaders,\n                  },\n                }\n              );\n            }\n            \n            return new Response(\n              JSON.stringify({\n                message: 'Internal server error processing chat request',\n                status: 'error',\n                code: 'INTERNAL_ERROR',\n                error: error.message\n              }),\n              {\n                status: 500,\n                headers: {\n                  'Content-Type': 'application/json',\n                  ...corsHeaders,\n                },\n              }\n            );\n          }\n        }\n\n        return new Response(\n          JSON.stringify({\n            message: 'Method not allowed. Use POST for /api/chat',\n            status: 'error',\n            code: 'METHOD_NOT_ALLOWED',\n            allowedMethods: ['POST']\n          }),\n          {\n            status: 405,\n            headers: {\n              'Content-Type': 'application/json',\n              ...corsHeaders,\n            },\n          }\n        );\n      }\n\n      // Event management endpoints - proxy to Durable Object\n      if (url.pathname.startsWith('/api/events')) {\n        return await handleEventRequest(request, sessionId, env, corsHeaders);\n      }\n\n      // 404 for unknown endpoints\n      return new Response(\n        JSON.stringify({\n          message: 'Endpoint not found',\n          status: 'error',\n          code: 'NOT_FOUND',\n          availableEndpoints: ['/api', '/health', '/api/chat', '/api/events/*']\n        }),\n        {\n          status: 404,\n          headers: {\n            'Content-Type': 'application/json',\n            ...corsHeaders,\n          },\n        }\n      );\n\n    } catch (error) {\n      // Global error handler\n      console.error('Worker error:', error);\n      \n      return new Response(\n        JSON.stringify({\n          message: 'Internal server error',\n          status: 'error',\n          code: 'GLOBAL_ERROR',\n          error: error.message\n        }),\n        {\n          status: 500,\n          headers: {\n            'Content-Type': 'application/json',\n            ...corsHeaders,\n          },\n        }\n      );\n    }\n  },\n};\n\n/**\n * Handle event-related requests by proxying to Durable Object\n */\nasync function handleEventRequest(request, sessionId, env, corsHeaders) {\n  try {\n    const calendarDO = getCalendarDO(sessionId, env);\n    const url = new URL(request.url);\n    \n    // Map API routes to DO routes\n    let doPath = url.pathname.replace('/api/events', '');\n    if (doPath === '' || doPath === '/') {\n      doPath = '/list';\n    }\n    \n    // Create new request for DO\n    const doUrl = new URL(`https://fake-host${doPath}`);\n    doUrl.search = url.search;\n    \n    const doRequest = new Request(doUrl.toString(), {\n      method: request.method,\n      headers: request.headers,\n      body: request.method !== 'GET' && request.method !== 'HEAD' ? request.body : null,\n    });\n\n    return await calendarDO.fetch(doRequest);\n    \n  } catch (error) {\n    console.error('Event request error:', error);\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: 'Failed to process event request',\n        details: error.message\n      }),\n      {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json',\n          ...corsHeaders,\n        },\n      }\n    );\n  }\n}\n\n/**\n * Process command with various event-related capabilities\n */\nasync function processCommandWithStorage(command, requestData, sessionId, env) {\n  const trimmedCommand = command.trim().toLowerCase();\n  \n  // Enhanced command analysis from Phase 2\n  const analysis = analyzeCommand(trimmedCommand);\n  \n  // Base response\n  const response = {\n    message: `\uD83D\uDCAC Processing: \"${command}\"`,\n    originalCommand: command,\n    commandLength: command.length,\n    analysis: analysis,\n    phase: 3,\n    conversationType: determineConversationType(trimmedCommand)\n  };\n\n  // Get calendar DO for all operations that might need event data\n  const calendarDO = getCalendarDO(sessionId, env);\n\n  try {\n    // Handle different types of conversations\n    switch (response.conversationType) {\n      case 'create':\n        return await handleEventCreation(command, analysis, calendarDO, response);\n      \n      case 'query':\n        return await handleEventQuery(trimmedCommand, calendarDO, response);\n      \n      case 'modify':\n        return await handleEventModification(trimmedCommand, calendarDO, response);\n      \n      case 'delete':\n        return await handleEventDeletion(trimmedCommand, calendarDO, response);\n      \n      case 'conflict_check':\n        return await handleConflictCheck(trimmedCommand, calendarDO, response);\n      \n      case 'general':\n        return await handleGeneralConversation(trimmedCommand, calendarDO, response);\n      \n      default:\n        response.message = `\uD83E\uDD14 I understand you said \"${command}\" but I'm not sure how to help. Try asking about your events or creating new ones.`;\n        response.suggestions = [\n          \"Ask: 'What's my schedule today?'\",\n          \"Create: 'Book lunch tomorrow at 1pm'\",\n          \"Check: 'Do I have any conflicts?'\"\n        ];\n        return response;\n    }\n  } catch (error) {\n    console.error('Command processing error:', error);\n    response.message = `\u274C Error processing your request: ${error.message}`;\n    response.error = error.message;\n    return response;\n  }\n}\n\n/**\n * Determine the type of conversation/request\n */\nfunction determineConversationType(command) {\n  // Query keywords have PRIORITY - check first\n  if (/\\b(what|when|where|who|how|show|list|find|search|tell me|what's|my schedule|show me)\\b/.test(command)) {\n    return 'query';\n  }\n  \n  // Event creation keywords - but EXCLUDE query patterns\n  if (/\\b(book|schedule|add|create|set up|plan|make)\\b/.test(command) && \n      (/\\b(at|on|for|next|this|tomorrow|today)\\b/.test(command) || /\\d{1,2}:\\d{2}|\\d{1,2}\\s*(am|pm)/.test(command)) &&\n      !/\\b(what|when|where|who|how|show|list|find|search|tell me|what's|my schedule)\\b/.test(command)) {\n    return 'create';\n  }\n  \n  // Modification keywords\n  if (/\\b(change|update|modify|move|reschedule|edit)\\b/.test(command)) {\n    return 'modify';\n  }\n  \n  // Deletion keywords\n  if (/\\b(delete|remove|cancel|clear)\\b/.test(command)) {\n    return 'delete';\n  }\n  \n  // Conflict checking\n  if (/\\b(conflicts?|clash|overlap|busy|free|available)\\b/.test(command)) {\n    return 'conflict_check';\n  }\n  \n  // General calendar conversation\n  if (/\\b(calendar|schedule|event|appointment|meeting|plan)\\b/.test(command)) {\n    return 'general';\n  }\n  \n  return 'unknown';\n}\n\n/**\n * Handle event creation\n */\nasync function handleEventCreation(command, analysis, calendarDO, response) {\n  if (shouldCreateEvent(analysis, command.toLowerCase())) {\n    const eventData = extractEventFromCommand(command, analysis);\n    \n    if (eventData) {\n      const doRequest = new Request('https://fake-host/add', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(eventData)\n      });\n      \n      const doResponse = await calendarDO.fetch(doRequest);\n      const result = await doResponse.json();\n      \n      if (result.success) {\n        response.message = `\u2705 Great! I've created \"${eventData.title}\" for ${formatDateTime(eventData.datetime)}`;\n        response.eventCreated = result.event;\n        response.conflicts = result.conflicts || [];\n        \n        if (result.conflicts && result.conflicts.length > 0) {\n          response.message += `\\n\u26A0\uFE0F Note: This conflicts with ${result.conflicts.length} other event${result.conflicts.length > 1 ? 's' : ''}. You can still keep it or let me suggest alternatives.`;\n        }\n      } else if (result.hasConflicts) {\n        response.message = `\uD83E\uDD14 I can create \"${eventData.title}\" but it conflicts with existing events. Would you like me to suggest alternative times?`;\n        response.eventData = eventData;\n        response.conflicts = result.conflicts;\n        response.canForceAdd = true;\n      } else {\n        response.message = `\u274C I couldn't create the event: ${result.error}`;\n      }\n    } else {\n      response.message = `\uD83E\uDD14 I understand you want to create an event, but I need more details. Can you specify a time and date?`;\n      response.suggestions = [\n        \"Try: 'Book lunch tomorrow at 1pm'\",\n        \"Or: 'Schedule meeting with team Friday at 2pm'\"\n      ];\n    }\n  } else {\n    response.message = `\uD83E\uDD14 It sounds like you want to create something, but I need more information. What would you like to schedule?`;\n    response.suggestions = [\n      \"Include a time: 'at 2pm' or 'tomorrow'\",\n      \"Be specific: 'Book lunch with Sam Friday at noon'\"\n    ];\n  }\n  \n  return response;\n}\n\n/**\n * Handle event queries\n */\nasync function handleEventQuery(command, calendarDO, response) {\n  const doRequest = new Request('https://fake-host/list', { method: 'GET' });\n  const doResponse = await calendarDO.fetch(doRequest);\n  const result = await doResponse.json();\n  \n  if (!result.success) {\n    response.message = \"\u274C I couldn't retrieve your events right now.\";\n    return response;\n  }\n  \n  const events = result.events || [];\n  \n  // Handle different types of queries\n  if (/\\b(today|today's)\\b/.test(command)) {\n    const todayEvents = filterEventsByDate(events, new Date());\n    response.message = formatEventsResponse(todayEvents, \"today\");\n  } else if (/\\b(tomorrow|tomorrow's)\\b/.test(command)) {\n    const tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const tomorrowEvents = filterEventsByDate(events, tomorrow);\n    response.message = formatEventsResponse(tomorrowEvents, \"tomorrow\");\n  } else if (/\\b(week|this week)\\b/.test(command)) {\n    const weekEvents = filterEventsThisWeek(events);\n    response.message = formatEventsResponse(weekEvents, \"this week\");\n  } else if (/\\b(next|upcoming)\\b/.test(command)) {\n    const upcomingEvents = events.slice(0, 5); // Next 5 events\n    response.message = formatEventsResponse(upcomingEvents, \"upcoming\");\n  } else if (/\\b(all|everything|schedule)\\b/.test(command)) {\n    response.message = formatEventsResponse(events, \"all your events\");\n  } else if (/\\b(with|participant)\\b/.test(command)) {\n    const participant = extractParticipantFromQuery(command);\n    const participantEvents = filterEventsByParticipant(events, participant);\n    response.message = formatEventsResponse(participantEvents, `events with ${participant}`);\n  } else if (/\\b(count|how many)\\b/.test(command)) {\n    response.message = `\uD83D\uDCCA You have ${events.length} event${events.length !== 1 ? 's' : ''} scheduled total.`;\n  } else {\n    // General schedule query\n    response.message = formatEventsResponse(events, \"your schedule\");\n  }\n  \n  response.events = events;\n  return response;\n}\n\n/**\n * Handle event modifications\n */\nasync function handleEventModification(command, calendarDO, response) {\n  // For Phase 3, provide guidance on modification capabilities\n  response.message = `\uD83D\uDD27 I can help you modify events! However, the full modification feature will be enhanced in Phase 4 with AI. For now, you can:`;\n  response.suggestions = [\n    \"Delete the event and create a new one\",\n    \"Tell me which event to change and I'll guide you\",\n    \"Use the delete button (\uD83D\uDDD1\uFE0F) in the events list\"\n  ];\n  \n  // Check if they're trying to modify a specific event\n  if (/\\b(lunch|meeting|appointment|dinner)\\b/.test(command)) {\n    const doRequest = new Request('https://fake-host/list', { method: 'GET' });\n    const doResponse = await calendarDO.fetch(doRequest);\n    const result = await doResponse.json();\n    \n    if (result.success && result.events.length > 0) {\n      response.message += `\\n\\n\uD83D\uDCC5 Here are your current events that might match:`;\n      response.events = result.events;\n    }\n  }\n  \n  return response;\n}\n\n/**\n * Handle event deletion\n */\nasync function handleEventDeletion(command, calendarDO, response) {\n  // For Phase 3, guide users to use the UI or be more specific\n  response.message = `\uD83D\uDDD1\uFE0F I can help you delete events! You can:`;\n  response.suggestions = [\n    \"Use the trash button (\uD83D\uDDD1\uFE0F) next to any event in the list\",\n    \"Tell me specifically which event to delete\",\n    \"Say 'delete my lunch meeting' for example\"\n  ];\n  \n  // Show current events for reference\n  const doRequest = new Request('https://fake-host/list', { method: 'GET' });\n  const doResponse = await calendarDO.fetch(doRequest);\n  const result = await doResponse.json();\n  \n  if (result.success && result.events.length > 0) {\n    response.message += `\\n\\n\uD83D\uDCC5 Your current events:`;\n    response.events = result.events;\n  } else {\n    response.message = `\uD83E\uDD37 You don't have any events to delete right now.`;\n  }\n  \n  return response;\n}\n\n/**\n * Handle conflict checking\n */\nasync function handleConflictCheck(command, calendarDO, response) {\n  const doRequest = new Request('https://fake-host/list', { method: 'GET' });\n  const doResponse = await calendarDO.fetch(doRequest);\n  const result = await doResponse.json();\n  \n  if (!result.success) {\n    response.message = \"\u274C I couldn't check for conflicts right now.\";\n    return response;\n  }\n  \n  const events = result.events || [];\n  const conflicts = findExistingConflicts(events);\n  \n  if (conflicts.length === 0) {\n    response.message = \"\u2705 Great news! You don't have any scheduling conflicts.\";\n  } else {\n    response.message = `\u26A0\uFE0F I found ${conflicts.length} scheduling conflict${conflicts.length > 1 ? 's' : ''}:`;\n    response.conflicts = conflicts;\n  }\n  \n  response.events = events;\n  return response;\n}\n\n/**\n * Handle general calendar conversation\n */\nasync function handleGeneralConversation(command, calendarDO, response) {\n  const doRequest = new Request('https://fake-host/list', { method: 'GET' });\n  const doResponse = await calendarDO.fetch(doRequest);\n  const result = await doResponse.json();\n  \n  const events = result.success ? result.events || [] : [];\n  \n  // Provide helpful overview and suggestions\n  response.message = `\uD83D\uDCC5 I'm here to help with your calendar! You have ${events.length} event${events.length !== 1 ? 's' : ''} scheduled.`;\n  \n  if (events.length === 0) {\n    response.message += ` Let's start by creating your first event!`;\n    response.suggestions = [\n      \"Try: 'Book lunch tomorrow at 1pm'\",\n      \"Or: 'Schedule meeting with team Friday'\",\n      \"Ask: 'What can you help me with?'\"\n    ];\n  } else {\n    response.suggestions = [\n      \"Ask: 'What's my schedule today?'\",\n      \"Create: 'Book dinner with friends Saturday'\",\n      \"Check: 'Do I have any conflicts?'\",\n      \"Query: 'Show me all my meetings'\"\n    ];\n  }\n  \n  response.events = events;\n  response.capabilities = [\n    \"Create events from natural language\",\n    \"Check your schedule for any time period\",\n    \"Detect and warn about conflicts\",\n    \"Help manage your calendar efficiently\"\n  ];\n  \n  return response;\n}\n\n// Helper functions for event queries\nfunction filterEventsByDate(events, targetDate) {\n  const targetDateStr = targetDate.toDateString();\n  return events.filter(event => {\n    const eventDate = new Date(event.datetime);\n    return eventDate.toDateString() === targetDateStr;\n  });\n}\n\nfunction filterEventsThisWeek(events) {\n  const now = new Date();\n  const weekStart = new Date(now.setDate(now.getDate() - now.getDay()));\n  const weekEnd = new Date(weekStart);\n  weekEnd.setDate(weekEnd.getDate() + 7);\n  \n  return events.filter(event => {\n    const eventDate = new Date(event.datetime);\n    return eventDate >= weekStart && eventDate < weekEnd;\n  });\n}\n\nfunction filterEventsByParticipant(events, participant) {\n  if (!participant) return [];\n  return events.filter(event => \n    event.participants && event.participants.some(p => \n      p.toLowerCase().includes(participant.toLowerCase())\n    )\n  );\n}\n\nfunction extractParticipantFromQuery(command) {\n  const withMatch = command.match(/with\\s+([a-zA-Z]+)/);\n  return withMatch ? withMatch[1] : '';\n}\n\nfunction formatEventsResponse(events, timeframe) {\n  if (events.length === 0) {\n    return `\uD83D\uDCC5 You don't have any events ${timeframe}.`;\n  }\n  \n  let message = `\uD83D\uDCC5 Here's ${timeframe} (${events.length} event${events.length !== 1 ? 's' : ''}):\\n\\n`;\n  \n  events.forEach(event => {\n    const date = new Date(event.datetime);\n    const timeStr = date.toLocaleString('en-US', {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n    \n    message += `\u2022 ${event.title} - ${timeStr}`;\n    if (event.participants && event.participants.length > 0) {\n      message += ` (with ${event.participants.join(', ')})`;\n    }\n    message += '\\n';\n  });\n  \n  return message.trim();\n}\n\nfunction findExistingConflicts(events) {\n  const conflicts = [];\n  \n  for (let i = 0; i < events.length; i++) {\n    for (let j = i + 1; j < events.length; j++) {\n      const event1 = events[i];\n      const event2 = events[j];\n      \n      const start1 = new Date(event1.datetime);\n      const end1 = new Date(start1.getTime() + (event1.duration || 60) * 60000);\n      const start2 = new Date(event2.datetime);\n      const end2 = new Date(start2.getTime() + (event2.duration || 60) * 60000);\n      \n      if (start1 < end2 && start2 < end1) {\n        conflicts.push({\n          event1: event1,\n          event2: event2,\n          overlapStart: new Date(Math.max(start1, start2)).toISOString(),\n          overlapEnd: new Date(Math.min(end1, end2)).toISOString()\n        });\n      }\n    }\n  }\n  \n  return conflicts;\n}\n\nfunction formatDateTime(datetime) {\n  return new Date(datetime).toLocaleString('en-US', {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n}\n\n/**\n * Determine if command should create an event\n */\nfunction shouldCreateEvent(analysis, command) {\n  const creationKeywords = ['book', 'schedule', 'add', 'create', 'set up', 'plan'];\n  const hasCreationKeyword = creationKeywords.some(keyword => command.includes(keyword));\n  \n  return hasCreationKeyword && (analysis.hasTime || analysis.hasDate) && analysis.eventType !== 'unknown';\n}\n\n/**\n * Extract basic event data from command (Phase 3 - simple parsing)\n */\nfunction extractEventFromCommand(command, analysis) {\n  try {\n    const title = extractTitle(command);\n    const datetime = extractDateTime(command);\n    \n    if (!title || !datetime) {\n      return null;\n    }\n    \n    return {\n      title: title,\n      datetime: datetime,\n      priority: 'medium',\n      duration: analysis.eventType === 'meal' ? 60 : 30,\n      participants: extractParticipants(command)\n    };\n  } catch (error) {\n    console.error('Event extraction error:', error);\n    return null;\n  }\n}\n\n/**\n * Basic title extraction\n */\nfunction extractTitle(command) {\n  // Remove common prefixes\n  let title = command\n    .replace(/^(book|schedule|add|create|set up|plan)\\s+/i, '')\n    .replace(/\\s+(at|on|for|with|next|this|tomorrow|today)\\s+.*$/i, '')\n    .trim();\n  \n  if (title.length === 0) {\n    // Fallback: use event type\n    if (command.includes('lunch')) return 'Lunch';\n    if (command.includes('meeting')) return 'Meeting';\n    if (command.includes('call')) return 'Call';\n    if (command.includes('appointment')) return 'Appointment';\n    return 'Event';\n  }\n  \n  return title.charAt(0).toUpperCase() + title.slice(1);\n}\n\n/**\n * Basic datetime extraction (Phase 3 - simple patterns)\n */\nfunction extractDateTime(command) {\n  const now = new Date();\n  \n  // Look for time patterns\n  const timeMatch = command.match(/(\\d{1,2}):?(\\d{2})?\\s*(am|pm)/i) || command.match(/(\\d{1,2})\\s*(am|pm)/i);\n  \n  let hour = 12;\n  let minute = 0;\n  \n  if (timeMatch) {\n    hour = parseInt(timeMatch[1]);\n    minute = timeMatch[2] ? parseInt(timeMatch[2]) : 0;\n    \n    if (timeMatch[3] && timeMatch[3].toLowerCase() === 'pm' && hour !== 12) {\n      hour += 12;\n    } else if (timeMatch[3] && timeMatch[3].toLowerCase() === 'am' && hour === 12) {\n      hour = 0;\n    }\n  }\n  \n  // Look for date patterns\n  let targetDate = new Date(now);\n  \n  if (command.includes('tomorrow')) {\n    targetDate.setDate(targetDate.getDate() + 1);\n  } else if (command.includes('next thursday') || command.includes('thursday')) {\n    // Simple: assume next Thursday\n    const daysUntilThursday = (4 - targetDate.getDay() + 7) % 7 || 7;\n    targetDate.setDate(targetDate.getDate() + daysUntilThursday);\n  } else if (command.includes('friday')) {\n    const daysUntilFriday = (5 - targetDate.getDay() + 7) % 7 || 7;\n    targetDate.setDate(targetDate.getDate() + daysUntilFriday);\n  }\n  // Add more day patterns as needed\n  \n  targetDate.setHours(hour, minute, 0, 0);\n  \n  return targetDate.toISOString();\n}\n\n/**\n * Extract participants from command\n */\nfunction extractParticipants(command) {\n  const participants = [];\n  const withMatch = command.match(/with\\s+([^at|on|for|next|this|tomorrow|today]+)/i);\n  \n  if (withMatch) {\n    const names = withMatch[1].trim().split(/\\s+and\\s+|\\s*,\\s*/);\n    participants.push(...names.filter(name => name.length > 0));\n  }\n  \n  return participants;\n}\n\n/**\n * Get or create Calendar Durable Object instance\n */\nfunction getCalendarDO(sessionId, env) {\n  const doId = env.CALENDAR_DO.idFromName(sessionId);\n  return env.CALENDAR_DO.get(doId);\n}\n\n/**\n * Extract session ID from request\n */\nfunction getSessionId(request) {\n  // Try to get session ID from header\n  let sessionId = request.headers.get('X-Session-ID');\n  \n  if (!sessionId) {\n    // Generate new session ID\n    sessionId = generateSessionId();\n  }\n  \n  return sessionId;\n}\n\n/**\n * Generate session ID\n */\nfunction generateSessionId() {\n  return 'session_' + Date.now().toString(36) + Math.random().toString(36).substr(2);\n}\n\n/**\n * Validate incoming chat request\n */\nfunction validateChatRequest(body) {\n  if (!body || typeof body !== 'object') {\n    return { valid: false, error: 'Request body must be a JSON object' };\n  }\n  \n  if (!body.command || typeof body.command !== 'string') {\n    return { valid: false, error: 'Missing or invalid \"command\" field' };\n  }\n  \n  if (body.command.trim().length === 0) {\n    return { valid: false, error: 'Command cannot be empty' };\n  }\n  \n  if (body.command.length > 1000) {\n    return { valid: false, error: 'Command too long (max 1000 characters)' };\n  }\n  \n  return { valid: true };\n}\n\n/**\n * Basic command analysis (from Phase 2)\n */\nfunction analyzeCommand(command) {\n  const analysis = {\n    wordCount: command.split(/\\s+/).length,\n    hasTime: /\\d{1,2}:?\\d{0,2}\\s*(am|pm)|\\d{1,2}:\\d{2}/.test(command),\n    hasDate: /(monday|tuesday|wednesday|thursday|friday|saturday|sunday|today|tomorrow|next|this)/.test(command),\n    eventType: 'unknown'\n  };\n  \n  // Simple event type detection\n  if (command.includes('lunch') || command.includes('dinner') || command.includes('breakfast')) {\n    analysis.eventType = 'meal';\n  } else if (command.includes('meeting') || command.includes('call')) {\n    analysis.eventType = 'meeting';\n  } else if (command.includes('appointment')) {\n    analysis.eventType = 'appointment';\n  } else if (command.includes('book') || command.includes('schedule')) {\n    analysis.eventType = 'booking';\n  }\n  \n  return analysis;\n}\n\n/**\n * Generate a simple request ID\n */\nfunction generateRequestId() {\n  return Math.random().toString(36).substr(2, 9);\n} \n\n/**\n * Process command with AI-powered understanding (Phase 4)\n */\n/**\n * Phase 5: Process command using Cloudflare Workflows\n * Coordinates the complete event processing pipeline\n */\nasync function processCommandWithWorkflow(command, requestData, sessionId, env) {\n  try {\n    console.log(`[Worker] Starting workflow for session: ${sessionId}, command: \"${command}\"`);\n    \n    // Invoke the calendar workflow\n    const workflowEvent = {\n      userInput: command,\n      sessionId: sessionId,\n      currentDate: new Date().toISOString(),\n      metadata: {\n        source: 'web_ui',\n        version: '5.0.0',\n        requestData\n      }\n    };\n\n    // Create workflow instance and run\n    const workflow = await env.WORKFLOW.create({\n      id: `calendar-${sessionId}-${Date.now()}`,\n      params: workflowEvent\n    });\n\n    // For now, return workflow initiation status and run synchronously in Phase 4 mode\n    // In production, you'd typically return the workflow ID and check status asynchronously\n    console.log(`[Worker] Workflow initiated for session: ${sessionId}, ID: ${workflow.id}`);\n    \n    // Fallback to Phase 4 processing for immediate response\n    // This maintains user experience while workflow runs in background\n    const phase4Result = await processCommandWithAI(command, requestData, sessionId, env);\n    \n    return {\n      ...phase4Result,\n      workflow: {\n        id: workflow.id,\n        status: 'initiated',\n        message: 'Workflow started in background for enhanced processing'\n      },\n      phase: 5,\n      workflow_orchestrated: true\n    };\n\n  } catch (error) {\n    console.error('[Worker] Workflow processing error:', error);\n    \n    // Graceful fallback to Phase 4\n    console.log('[Worker] Falling back to Phase 4 processing due to workflow error');\n    return await processCommandWithAI(command, requestData, sessionId, env);\n  }\n}\n\nasync function processCommandWithAI(command, requestData, sessionId, env) {\n  // Check if we're in local development mode - fallback to Phase 3\n  if (env.LOCAL_DEV_MODE === \"true\") {\n    console.log('[LOCAL DEV] Bypassing AI, using Phase 3 processing');\n    return await processCommandWithStorage(command, requestData, sessionId, env);\n  }\n\n  const response = {\n    message: `\uD83E\uDDE0 AI Processing: \"${command}\"`,\n    originalCommand: command,\n    commandLength: command.length,\n    phase: 4,\n    ai_powered: true\n  };\n\n  try {\n    // Step 1: Use AI to classify conversation intent\n    const classificationResult = await classifyConversationWithAI(command, env);\n    response.classification = classificationResult;\n\n    // Get calendar DO for operations that need event data\n    const calendarDO = getCalendarDO(sessionId, env);\n\n    // Step 2: Route to appropriate AI-powered handler based on intent\n    switch (classificationResult.intent) {\n      case 'create':\n        return await handleAIEventCreation(command, calendarDO, response, env);\n      \n      case 'query':\n        return await handleAIQuery(command, calendarDO, response, env);\n      \n      case 'modify':\n        return await handleAIModification(command, calendarDO, response, env);\n      \n      case 'delete':\n        return await handleAIDeletion(command, calendarDO, response, env);\n      \n      case 'conflict_check':\n        return await handleAIConflictCheck(command, calendarDO, response, env);\n      \n      case 'general':\n      case 'help':\n        return await handleAIGeneralConversation(command, calendarDO, response, env);\n      \n      default:\n        // Fallback to Phase 3 processing if AI classification fails\n        console.warn('AI classification failed, falling back to Phase 3');\n        return await processCommandWithStorage(command, requestData, sessionId, env);\n    }\n\n  } catch (error) {\n    console.error('AI processing error:', error);\n    \n    // Graceful fallback to Phase 3 processing\n    response.ai_error = error.message;\n    response.fallback_used = 'phase_3_processing';\n    response.message = `\uD83E\uDD16 AI processing failed, using basic parsing: ${error.message}`;\n    \n    return await processCommandWithStorage(command, requestData, sessionId, env);\n  }\n}\n\n/**\n * Use AI to classify conversation intent\n */\nasync function classifyConversationWithAI(command, env) {\n  try {\n    const prompt = PROMPTS.conversationClassification.buildPrompt(command);\n    \n    const aiResponse = await env.AI.run(PROMPTS.conversationClassification.model, {\n      prompt: prompt,\n      max_tokens: PROMPTS.conversationClassification.maxTokens,\n      temperature: PROMPTS.conversationClassification.temperature\n    });\n\n    const validation = validateAIResponse(aiResponse.response);\n    if (!validation.valid) {\n      throw new Error(`Invalid AI response: ${validation.error}`);\n    }\n\n    return validation.data;\n  } catch (error) {\n    console.error('AI classification error:', error);\n    // Fallback to Phase 3 classification\n    return {\n      intent: determineConversationType(command.toLowerCase()),\n      confidence: 0.5,\n      fallback: 'phase_3_classification',\n      error: error.message\n    };\n  }\n}\n\n/**\n * AI-powered event creation\n */\nasync function handleAIEventCreation(command, calendarDO, response, env) {\n  try {\n    // Use AI to extract event details\n    const extractionPrompt = PROMPTS.eventExtraction.buildPrompt(command);\n    \n    const aiResponse = await env.AI.run(PROMPTS.eventExtraction.model, {\n      prompt: extractionPrompt,\n      max_tokens: PROMPTS.eventExtraction.maxTokens,\n      temperature: PROMPTS.eventExtraction.temperature\n    });\n\n    const validation = validateAIResponse(aiResponse.response);\n    if (!validation.valid) {\n      throw new Error(`Invalid AI extraction response: ${validation.error}`);\n    }\n\n    const extractionResult = validation.data;\n    \n    if (!extractionResult.success || !extractionResult.event) {\n      response.message = `\uD83E\uDD14 I understand you want to create an event, but I need more details. ${extractionResult.ambiguities ? extractionResult.ambiguities.join(', ') : ''}`;\n      response.suggestions = extractionResult.suggestions || [\n        \"Try being more specific about time and date\",\n        \"Include who should attend the event\"\n      ];\n      response.ai_extraction = extractionResult;\n      return response;\n    }\n\n    // Create event using AI-extracted data\n    const eventData = {\n      ...extractionResult.event,\n      aiExtracted: true,\n      aiConfidence: extractionResult.confidence,\n      extractedFrom: command\n    };\n\n    const doRequest = new Request('https://fake-host/add', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(eventData)\n    });\n    \n    const doResponse = await calendarDO.fetch(doRequest);\n    const result = await doResponse.json();\n    \n    if (result.success) {\n      response.message = `\u2705 Perfect! I've created \"${extractionResult.event.title}\" for ${formatDateTime(extractionResult.event.datetime)}`;\n      response.eventCreated = result.event;\n      response.conflicts = result.conflicts || [];\n      response.ai_extraction = extractionResult;\n      \n      if (result.conflicts && result.conflicts.length > 0) {\n        // Use AI for smarter conflict resolution\n        const conflictSuggestions = await generateAIConflictSuggestions(\n          extractionResult.event, \n          result.conflicts, \n          env\n        );\n        response.ai_conflict_suggestions = conflictSuggestions;\n        response.message += `\\n\u26A0\uFE0F I detected ${result.conflicts.length} scheduling conflict${result.conflicts.length > 1 ? 's' : ''}. Would you like me to suggest alternatives?`;\n      }\n    } else if (result.hasConflicts) {\n      response.message = `\uD83E\uDD14 I can create \"${extractionResult.event.title}\" but it conflicts with existing events. Should I suggest alternative times?`;\n      response.eventData = eventData;\n      response.conflicts = result.conflicts;\n      response.canForceAdd = true;\n    } else {\n      response.message = `\u274C I couldn't create the event: ${result.error}`;\n      response.error = result.error;\n    }\n    \n    return response;\n\n  } catch (error) {\n    console.error('AI event creation error:', error);\n    // Fallback to Phase 3 event creation\n    return await handleEventCreation(command, analyzeCommand(command.toLowerCase()), calendarDO, response);\n  }\n}\n\n/**\n * AI-powered natural language queries\n */\nasync function handleAIQuery(command, calendarDO, response, env) {\n  try {\n    // Get user's events first\n    const doRequest = new Request('https://fake-host/list', { method: 'GET' });\n    const doResponse = await calendarDO.fetch(doRequest);\n    const result = await doResponse.json();\n    \n    if (!result.success) {\n      response.message = \"\u274C I couldn't retrieve your events right now.\";\n      return response;\n    }\n\n    const events = result.events || [];\n    \n    // Use AI to understand the query and generate response\n    const queryPrompt = PROMPTS.naturalLanguageQuery.buildPrompt(command, events, new Date());\n    \n    const aiResponse = await env.AI.run(PROMPTS.naturalLanguageQuery.model, {\n      prompt: queryPrompt,\n      max_tokens: PROMPTS.naturalLanguageQuery.maxTokens,\n      temperature: PROMPTS.naturalLanguageQuery.temperature\n    });\n\n    const validation = validateAIResponse(aiResponse.response);\n    if (!validation.valid) {\n      throw new Error(`Invalid AI query response: ${validation.error}`);\n    }\n\n    const queryResult = validation.data;\n    \n    response.message = queryResult.answer;\n    response.events = events;\n    response.relevant_events = queryResult.relevant_events;\n    response.ai_analysis = queryResult;\n    response.suggestions = queryResult.suggestions;\n\n    return response;\n\n  } catch (error) {\n    console.error('AI query error:', error);\n    // Fallback to Phase 3 query handling\n    return await handleEventQuery(command.toLowerCase(), calendarDO, response);\n  }\n}\n\n/**\n * AI-powered general conversation\n */\nasync function handleAIGeneralConversation(command, calendarDO, response, env) {\n  try {\n    // Get user's events for context\n    const doRequest = new Request('https://fake-host/list', { method: 'GET' });\n    const doResponse = await calendarDO.fetch(doRequest);\n    const result = await doResponse.json();\n    const events = result.success ? result.events || [] : [];\n\n    // Use AI for contextual conversation\n    const conversationPrompt = PROMPTS.contextualConversation.buildPrompt(\n      command, \n      [], // TODO: Implement conversation history\n      events\n    );\n    \n    const aiResponse = await env.AI.run(PROMPTS.contextualConversation.model, {\n      prompt: conversationPrompt,\n      max_tokens: PROMPTS.contextualConversation.maxTokens,\n      temperature: PROMPTS.contextualConversation.temperature\n    });\n\n    const validation = validateAIResponse(aiResponse.response);\n    if (!validation.valid) {\n      throw new Error(`Invalid AI conversation response: ${validation.error}`);\n    }\n\n    const conversationResult = validation.data;\n    \n    response.message = conversationResult.response;\n    response.events = events;\n    response.suggestions = conversationResult.suggestions;\n    response.follow_up_questions = conversationResult.follow_up_questions;\n    response.ai_conversation = conversationResult;\n\n    return response;\n\n  } catch (error) {\n    console.error('AI conversation error:', error);\n    // Fallback to Phase 3 general conversation\n    return await handleGeneralConversation(command.toLowerCase(), calendarDO, response);\n  }\n}\n\n/**\n * Generate AI-powered conflict resolution suggestions\n */\nasync function generateAIConflictSuggestions(newEvent, conflicts, env) {\n  try {\n    const conflictPrompt = PROMPTS.conflictResolution.buildPrompt(\n      newEvent,\n      conflicts,\n      {} // TODO: Add user schedule context\n    );\n    \n    const aiResponse = await env.AI.run(PROMPTS.conflictResolution.model, {\n      prompt: conflictPrompt,\n      max_tokens: PROMPTS.conflictResolution.maxTokens,\n      temperature: PROMPTS.conflictResolution.temperature\n    });\n\n    const validation = validateAIResponse(aiResponse.response);\n    if (validation.valid) {\n      return validation.data;\n    }\n  } catch (error) {\n    console.error('AI conflict resolution error:', error);\n  }\n  \n  return null;\n}\n\n/**\n * Placeholder handlers for AI modification and deletion (enhanced in future iterations)\n */\nasync function handleAIModification(command, calendarDO, response, env) {\n  response.message = `\uD83D\uDD27 AI-powered event modification coming soon! For now, you can delete and recreate events.`;\n  response.note = \"Phase 4 focuses on creation and querying. Modification will be enhanced in future updates.\";\n  return response;\n}\n\nasync function handleAIDeletion(command, calendarDO, response, env) {\n  response.message = `\uD83D\uDDD1\uFE0F AI-powered event deletion coming soon! For now, use the delete button (\uD83D\uDDD1\uFE0F) next to events.`;\n  response.note = \"Phase 4 focuses on creation and querying. Deletion will be enhanced in future updates.\";\n  return response;\n}\n\nasync function handleAIConflictCheck(command, calendarDO, response, env) {\n  // Use AI query for conflict checking for now\n  return await handleAIQuery(command, calendarDO, response, env);\n} ", "/**\n * AI Prompt Templates for AutoCal - Phase 5\n * Structured prompts for Llama 3.3 on Workers AI - Workflow Edition\n */\n\nexport const WORKFLOW_PROMPTS = {\n  eventExtraction: {\n    version: \"1.0\",\n    model: \"@cf/meta/llama-3.3-70b-instruct-fp8-fast\",\n    maxTokens: 512,\n    temperature: 0.1,\n    \n    buildPrompt: (userInput, currentDate = new Date()) => {\n      return `You are an expert calendar assistant. Extract structured event information from natural language.\n\nCurrent date/time: ${currentDate.toISOString()}\nUser input: \"${userInput}\"\n\nExtract the following information and respond ONLY with valid JSON:\n{\n  \"success\": true/false,\n  \"confidence\": 0.0-1.0,\n  \"event\": {\n    \"title\": \"brief descriptive title\",\n    \"description\": \"optional longer description\",\n    \"datetime\": \"ISO 8601 datetime string\",\n    \"duration\": minutes as number,\n    \"participants\": [\"name1\", \"name2\"],\n    \"location\": \"location or null\",\n    \"priority\": \"low/medium/high\",\n    \"type\": \"meeting/appointment/meal/event/call\",\n    \"urgency\": \"low/normal/high\"\n  },\n  \"ambiguities\": [\"list of unclear aspects\"],\n  \"suggestions\": [\"alternative interpretations\"]\n}\n\nRules:\n- For relative times like \"tomorrow\", \"next Tuesday\", calculate actual dates\n- Default duration: meetings=30min, meals=60min, appointments=30min\n- If time is ambiguous, suggest business hours (9am-5pm)\n- Extract all mentioned people as participants\n- Determine urgency from words like \"urgent\", \"ASAP\", \"important\"\n- If information is missing or unclear, note in ambiguities\n\nExamples:\nInput: \"Book lunch with Sarah tomorrow at 1pm\"\nOutput: {\"success\":true,\"confidence\":0.95,\"event\":{\"title\":\"Lunch with Sarah\",\"datetime\":\"2024-09-26T13:00:00.000Z\",\"duration\":60,\"participants\":[\"Sarah\"],\"location\":null,\"priority\":\"medium\",\"type\":\"meal\",\"urgency\":\"normal\"},\"ambiguities\":[],\"suggestions\":[]}\n\nInput: \"Meeting next week\"\nOutput: {\"success\":false,\"confidence\":0.3,\"event\":null,\"ambiguities\":[\"No specific time\",\"No participants\",\"Vague date\"],\"suggestions\":[\"Specify day and time\",\"Add participants\",\"Clarify meeting purpose\"]}\n\nNow extract from: \"${userInput}\"`\n    }\n  },\n\n  conversationClassification: {\n    version: \"1.0\",\n    model: \"@cf/meta/llama-3.3-70b-instruct-fp8-fast\",\n    maxTokens: 256,\n    temperature: 0.1,\n\n    buildPrompt: (userInput) => {\n      return `Classify the user's intent for this calendar-related request.\n\nUser input: \"${userInput}\"\n\nRespond ONLY with valid JSON:\n{\n  \"intent\": \"create/query/modify/delete/conflict_check/general/help\",\n  \"confidence\": 0.0-1.0,\n  \"subtype\": \"specific action type\",\n  \"entities\": {\n    \"timeframe\": \"today/tomorrow/next week/specific date/null\",\n    \"people\": [\"mentioned names\"],\n    \"event_types\": [\"meeting/appointment/etc\"],\n    \"keywords\": [\"important words\"]\n  },\n  \"requires_clarification\": true/false,\n  \"suggested_response_type\": \"conversational/action/question\"\n}\n\nIntent categories:\n- create: wants to schedule/book/add/plan new event (MUST include action words like book/schedule/add)\n- query: asking about schedule/events (what/when/show/list/my schedule - ALWAYS query, never create)\n- modify: change/update/move/reschedule existing event\n- delete: cancel/remove/clear events\n- conflict_check: check for overlaps/conflicts/availability\n- general: help/capabilities/general calendar discussion\n- help: unclear intent or needs assistance\n\nKEY RULE: If input contains \"what\", \"show\", \"list\", \"my schedule\", \"tell me\" \u2192 ALWAYS \"query\", never \"create\"\n\nExamples:\n\"Book lunch tomorrow\" \u2192 {\"intent\":\"create\",\"confidence\":0.9}\n\"What's my schedule today?\" \u2192 {\"intent\":\"query\",\"confidence\":0.95}\n\"What my schedule next week\" \u2192 {\"intent\":\"query\",\"confidence\":0.95}\n\"Show me my calendar\" \u2192 {\"intent\":\"query\",\"confidence\":0.95}\n\"Do I have conflicts?\" \u2192 {\"intent\":\"conflict_check\",\"confidence\":0.9}\n\"Help me\" \u2192 {\"intent\":\"help\",\"confidence\":0.8}\n\nClassify: \"${userInput}\"`\n    }\n  },\n\n  conflictResolution: {\n    version: \"1.0\",\n    model: \"@cf/meta/llama-3.3-70b-instruct\",\n    maxTokens: 384,\n    temperature: 0.3,\n\n    buildPrompt: (newEvent, conflictingEvents, userSchedule) => {\n      return `You are a scheduling expert. Suggest solutions for this calendar conflict.\n\nNew event: ${JSON.stringify(newEvent)}\nConflicting with: ${JSON.stringify(conflictingEvents)}\nUser's schedule context: ${JSON.stringify(userSchedule)}\n\nRespond ONLY with valid JSON:\n{\n  \"analysis\": \"brief conflict description\",\n  \"severity\": \"minor/moderate/major\",\n  \"recommendations\": [\n    {\n      \"type\": \"reschedule_new/reschedule_existing/shorten_duration/change_location\",\n      \"description\": \"user-friendly explanation\",\n      \"new_datetime\": \"ISO datetime if applicable\",\n      \"reasoning\": \"why this is a good solution\",\n      \"impact\": \"what changes for user\"\n    }\n  ],\n  \"questions\": [\"clarifying questions for user\"],\n  \"alternatives\": [\"other options to consider\"]\n}\n\nConsider:\n- Meeting importance and priorities\n- Travel time between locations\n- Participant availability patterns\n- Buffer time around meetings\n- User's typical schedule preferences\n\nGenerate helpful, actionable suggestions that minimize disruption.`\n    }\n  },\n\n  naturalLanguageQuery: {\n    version: \"1.0\",\n    model: \"@cf/meta/llama-3.3-70b-instruct-fp8-fast\",\n    maxTokens: 512,\n    temperature: 0.2,\n\n    buildPrompt: (userQuery, events, currentDate) => {\n      return `You are a helpful calendar assistant. Answer the user's question about their schedule.\n\nCurrent date: ${currentDate.toISOString()}\nUser question: \"${userQuery}\"\nUser's events: ${JSON.stringify(events)}\n\nRespond ONLY with valid JSON:\n{\n  \"answer\": \"natural language response\",\n  \"relevant_events\": [\"array of event IDs that match the query\"],\n  \"summary\": {\n    \"count\": number,\n    \"timeframe\": \"description of time period\",\n    \"highlights\": [\"key points about the schedule\"]\n  },\n  \"suggestions\": [\"helpful follow-up actions\"],\n  \"confidence\": 0.0-1.0\n}\n\nQuery types to handle:\n- Schedule overview: \"What's my day like?\"\n- Specific searches: \"Meetings with John\"\n- Time availability: \"Am I free tomorrow afternoon?\"\n- Event details: \"When is my next appointment?\"\n- Pattern analysis: \"How busy am I this week?\"\n\nBe conversational, helpful, and specific. Include relevant details like times, participants, and locations.\n\nAnswer: \"${userQuery}\"`\n    }\n  },\n\n  contextualConversation: {\n    version: \"1.0\",\n    model: \"@cf/meta/llama-3.3-70b-instruct-fp8-fast\",\n    maxTokens: 384,\n    temperature: 0.4,\n\n    buildPrompt: (currentMessage, conversationHistory, userEvents) => {\n      return `You are AutoCal, a friendly AI calendar assistant. Continue this conversation naturally.\n\nConversation history: ${JSON.stringify(conversationHistory)}\nCurrent message: \"${currentMessage}\"\nUser's events: ${JSON.stringify(userEvents)}\n\nRespond ONLY with valid JSON:\n{\n  \"response\": \"natural, helpful response\",\n  \"action_needed\": \"none/create_event/modify_event/query_schedule/clarify\",\n  \"follow_up_questions\": [\"questions to better help the user\"],\n  \"context_maintained\": {\n    \"previous_topic\": \"what we were discussing\",\n    \"user_preferences\": \"learned preferences\",\n    \"pending_actions\": \"incomplete tasks\"\n  },\n  \"suggestions\": [\"helpful next steps\"],\n  \"tone\": \"friendly/professional/casual\"\n}\n\nGuidelines:\n- Maintain conversation context and remember previous exchanges\n- Be helpful and proactive in offering assistance\n- Ask clarifying questions when needed\n- Acknowledge previous interactions\n- Offer relevant suggestions based on their calendar\n- Use a warm, professional tone\n\nContinue the conversation for: \"${currentMessage}\"`\n    }\n  }\n};\n\n// Prompt utility functions\nexport function validateAIResponse(response, expectedSchema) {\n  try {\n    const parsed = JSON.parse(response);\n    return { valid: true, data: parsed };\n  } catch (error) {\n    return { valid: false, error: error.message };\n  }\n}\n\nexport function buildFallbackResponse(userInput, errorMessage) {\n  return {\n    success: false,\n    confidence: 0.0,\n    error: \"AI_PARSING_FAILED\",\n    fallback: \"PHASE_3_PARSING\",\n    message: `AI processing failed: ${errorMessage}. Using basic parsing.`,\n    userInput: userInput\n  };\n}\n\nexport function optimizePromptForTokens(prompt, maxTokens = 2048) {\n  if (prompt.length <= maxTokens) return prompt;\n  \n  // Truncate while preserving structure\n  const lines = prompt.split('\\n');\n  let result = '';\n  \n  for (const line of lines) {\n    if ((result + line).length > maxTokens - 100) break;\n    result += line + '\\n';\n  }\n  \n  return result + '\\n\\nNote: Input truncated due to length.';\n} ", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/shammah/work/cf_ai_autocal/workers/index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/shammah/work/cf_ai_autocal/workers/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/shammah/work/cf_ai_autocal/workers/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/shammah/work/cf_ai_autocal/workers/index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/shammah/work/cf_ai_autocal/workers/.wrangler/tmp/bundle-ul5Npd/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/shammah/work/cf_ai_autocal/workers/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/shammah/work/cf_ai_autocal/workers/.wrangler/tmp/bundle-ul5Npd/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/shammah/work/cf_ai_autocal/workers/.wrangler/tmp/bundle-ul5Npd/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["PerformanceMark", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "hrtime", "dir", "env", "count", "cwd", "hrtime", "assert", "env", "error", "count", "error", "error", "env", "title", "env", "env", "error", "env", "env"]
}
